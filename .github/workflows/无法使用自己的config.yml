name: 无法使用config OpenWrt x86lean

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: x86lean.config
  TZ: Asia/Shanghai
  DEVICE: x86lean
  CCACHE_DIR: /workdir/openwrt/.ccache

jobs:
  build-openwrt:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
    - name: 检出代码
      uses: actions/checkout@v3

    - name: 删除旧的发行版
      uses: dev-drprasad/delete-older-releases@v0.3.2
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 删除旧的工作流运行记录
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 释放磁盘空间
      run: |
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get clean

    - name: 设置环境
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo apt update && sudo apt install -y build-essential ccache git \
          libncurses5-dev libssl-dev python3 unzip wget
        sudo mkdir -p /workdir /workdir/openwrt/.ccache
        sudo chown -R $USER:$GROUPS /workdir

    - name: 克隆仓库
      run: |
        rm -rf /workdir/openwrt
        git clone $REPO_URL -b $REPO_BRANCH /workdir/openwrt

    - name: 缓存 ccache
      id: cache-ccache
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-openwrt-${{ env.DEVICE }}-ccache-${{ hashFiles(env.CONFIG_FILE) }}
        restore-keys: ${{ runner.os }}-openwrt-${{ env.DEVICE }}-

    - name: 配置 OpenWrt
      run: |
        cd /workdir/openwrt
        # 确保配置文件存在并正确复制到 .config
        if [ -f "$GITHUB_WORKSPACE/${{ env.CONFIG_FILE }}" ]; then
          cp "$GITHUB_WORKSPACE/${{ env.CONFIG_FILE }}" .config
        else
          echo "错误：无法找到 $GITHUB_WORKSPACE/${{ env.CONFIG_FILE }} 文件"
          exit 1
        fi
        ./scripts/feeds update -a && ./scripts/feeds install -a
        sed -i 's/192.168.1.1/192.168.0.1/g' package/base-files/files/bin/config_generate
        make defconfig

    - name: 下载并编译
      run: |
        cd /workdir/openwrt
        export CCACHE_DIR=$CCACHE_DIR
        export CC="ccache gcc"
        export CXX="ccache g++"
        make download -j$(nproc)
        if [ "${{ steps.cache-ccache.outputs.cache-hit }}" != "true" ]; then
          echo "缓存未命中，执行完整编译..."
          make -j$(nproc) V=s
        else
          echo "缓存命中，仅生成镜像..."
          make -j$(nproc) V=s BUILD_IMAGE_ONLY=1
        fi
        ccache -s

    - name: 检查编译输出
      run: |
        ls -lh /workdir/openwrt/bin/targets/x86/64/ || echo "未找到输出目录"

    - name: 检查 ccache 目录
      run: |
        ls -lh /workdir/openwrt/.ccache || echo "ccache 目录为空"
        du -sh /workdir/openwrt/.ccache || echo "无法测量大小"

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.DEVICE }}-${{ github.run_id }}
        path: /workdir/openwrt/bin/targets/x86/64/*

    - name: 调试 GITHUB_TOKEN
      run: |
        echo "GITHUB_TOKEN 前10位: ${GITHUB_TOKEN:0:10}..."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 发布固件
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.DEVICE }}-${{ github.run_id }}
        files: /workdir/openwrt/bin/targets/x86/64/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}