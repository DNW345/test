name: gdqax6600

on:
  schedule:
    - cron: '0 15 */15 * *' # 每 15 天的 15:00 执行一次
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: gdqax6600.config
  TZ: Asia/Shanghai
  DEVICE: gdqax6600
  UPLOAD_OUTPUT: true
  CCACHE_DIR: /workdir/openwrt/.ccache
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  build-openwrt:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: 初始化构建环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "【步骤1】初始化构建环境"
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
        genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
        libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
        libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
        python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
        swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: 克隆源码
      working-directory: /workdir
      run: |
        echo "【步骤2】克隆源码"
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        sudo mkdir -p -m 777 /mnt/openwrt/{dl,feeds,staging_dir}
        ln -s /mnt/openwrt/dl /workdir/openwrt/dl
        ln -s /mnt/openwrt/feeds /workdir/openwrt/feeds
        ln -s /mnt/openwrt/staging_dir /workdir/openwrt/staging_dir
        echo "源码克隆完成 ✅"

    - name: 配置 Feeds
      run: |
        echo "【步骤3】配置 Feeds"
        cd openwrt
        rm -rf package/helloworld
        git clone --depth=1 https://github.com/fw876/helloworld.git package/helloworld
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        echo "Feeds 配置完成 ✅"

    - name: 下载依赖
      run: |
        echo "【步骤4】下载依赖"
        cp -f $GITHUB_WORKSPACE/gdqax6600.config $GITHUB_WORKSPACE/openwrt/.config
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;
        echo "依赖下载完成 ✅"

    - name: 编译固件并保存日志到仓库根目录
      run: |
        echo "【步骤5】编译固件并保存日志到仓库根目录"
        cd openwrt
        export CCACHE_DIR=${{ env.CCACHE_DIR }}
        export CC="ccache gcc"
        export CXX="ccache g++"
        # 将日志同时输出到控制台和仓库根目录的 log2.log 文件
        make -j$(nproc) 2>&1 | tee $GITHUB_WORKSPACE/log2.log
        ccache -s
        echo "固件编译完成 ✅"

    - name: 上传日志文件到 GitHub Actions
      uses: actions/upload-artifact@v3
      with:
        name: build-log
        path: $GITHUB_WORKSPACE/log2.log

    - name: 上传输出文件
      uses: actions/upload-artifact@v3
      if: env.UPLOAD_OUTPUT == 'true' && !cancelled()
      with:
        name: ${{ env.DEVICE }}--${{ env.FILE_DATE }}
        path: openwrt/bin/targets

    - name: 设置环境变量
      run: |
        echo "DEVICE=$(echo '${{ env.DEVICE }}' | tr -cd '[:alnum:]-_')" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +%Y-%m-%d_%H-%M)" >> $GITHUB_ENV

    - name: 发布固件至 Release
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ env.DEVICE }}-${{ env.FILE_DATE }}"
        artifacts: "openwrt/bin/targets/*/*/*"
