name: gdqax6600log

on:
  schedule:
    - cron: '0 15 */15 * *' # 每 15 天的 15:00 执行一次
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: gdqax6600.config
  TZ: Asia/Shanghai
  DEVICE: gdqax6600
  UPLOAD_OUTPUT: true
  CCACHE_DIR: /workdir/openwrt/.ccache
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-openwrt:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: 创建工作目录
      run: |
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 初始化构建环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "【步骤2】初始化构建环境"
        sudo apt update -y
        sudo apt install -y ack autoconf automake binutils bison build-essential \
        bzip2 ccache clang cmake curl flex gawk gcc-multilib g++-multilib gettext \
        git gperf intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libpython3-dev libssl-dev libtool \
        lrzsz ninja-build p7zip-full patch pkgconf python3 python3-setuptools \
        rsync squashfs-tools subversion swig texinfo unzip vim wget xxd zlib1g-dev
        sudo timedatectl set-timezone "Asia/Shanghai"

    - name: 克隆源码
      working-directory: /workdir
      run: |
        echo "【步骤3】克隆源码"
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 下载依赖
      run: |
        echo "【步骤6】下载依赖"
        cp -f $GITHUB_WORKSPACE/gdqax6600.config $GITHUB_WORKSPACE/openwrt/.config
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      run: |
        echo "【步骤7】编译固件"
        cd openwrt
        export CCACHE_DIR=${{ env.CCACHE_DIR }}
        export CC="ccache gcc"
        export CXX="ccache g++"
        make -j$(nproc) V=s | tee build.log

    - name: 上传编译日志
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: openwrt/build.log

    - name: 提交编译日志到仓库
      if: always()
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        cp openwrt/build.log $GITHUB_WORKSPACE/build.log
        git add build.log
        git commit -m "上传最新编译日志" || echo "No changes to commit"
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
